package pack1;
public class MergeSort {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr= {5,6,1,2,4,0};     //{169 , 2, -6 , 8 , -55 , 88 , 11 ,55 };
		int n=arr.length;
		for(int i=0;i<n;i++)
			System.out.print(arr[i]+" ");
		System.out.println();
		
		mergeSort(arr, 0 , n-1);
		
		for(int i=0;i<n;i++)
			System.out.print(arr[i]+" ");
		System.out.println();	
	}    // main fn ends
	
	static void mergeSort(int arr[], int s, int e) {  //s=start, e=end
		if(s>=e)                             //Base case - 1 or 0 elements
			return;
		
		//follow 3 steps
		//1.divide
		int mid=(s+e)/2;
		
		
		//Recursively the arrays - s,mid and mid+1,e
		mergeSort(arr,s,mid);
		mergeSort(arr,mid+1, e);
		
		//merge 2 parts
		mergeTwoArrays(arr,s,e);
		
	}//mergeSort fn ends
	
	static void mergeTwoArrays(int[] arr, int s,int e) {
		int mid=(s+e)/2;
		
		int i=s;	  //i= 0th index of 1st array
		int j=mid+1;  //j= 0th index of 2nd  array
		int k =s;	  //k= 0th index of tempArray
		
		int[] temparr=new int[arr.length];
		
		while(i<=mid && j<=e) {
			if(arr[i]<arr[j])
				temparr[k++]=arr[i++];
			else
				temparr[k++]=arr[j++];
		}
		
		while(i<=mid)
			temparr[k++] = arr[i++];
		
		while(j<=e)
			temparr[k++] = arr[j++];
		
		for(int m=s;m<=e;m++)  //We need to copy all element to original arrays
			arr[m]=temparr[m];
	}//
}
